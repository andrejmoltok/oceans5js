generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  username      String    @unique(map: "user_unique_1") @db.VarChar(100)
  email         String    @unique(map: "user_unique") @db.VarChar(100)
  emailVerified Boolean   @default(false)
  passwordHash  String    @db.VarChar(100)
  firstname     String    @db.VarChar(100)
  lastname      String?   @db.VarChar(100)
  role          String    @default("player") @db.VarChar(100)
  birthYear     Int?      @default(1934) @db.UnsignedInt
  gender        String?   @db.VarChar(50)
  location      String?   @db.VarChar(100)
  status        String    @db.VarChar(100)
  lockedAt      DateTime? @db.Timestamp(0)
  mfaEnabled    Boolean   @default(false)
  mfaSecret     String?   @db.VarChar(500)
  lastActive    DateTime? @default(now()) @db.Timestamp(0)
  createdAt     DateTime  @default(now()) @db.Timestamp(0)
  codes         codes[]
  lobby         lobby[]
  player        player[]
  session       session[]
}

model session {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  userID      Int       @db.UnsignedInt
  sessionData String    @unique(map: "session_unique") @db.VarChar(1000)
  loginAt     DateTime  @default(now()) @db.Timestamp(0)
  logoutAt    DateTime? @db.Timestamp(0)
  status      String    @db.VarChar(100)
  user        user      @relation(fields: [userID], references: [id], onDelete: Cascade, map: "session_user_FK")

  @@index([userID], map: "session_user_FK")
}

model player {
  id            Int     @id @default(autoincrement()) @db.UnsignedInt
  userID        Int     @db.UnsignedInt
  accuracyRatio Decimal @default(0) @db.Decimal(10, 0)
  avgScore      Int     @default(0) @db.UnsignedInt
  gamesLost     Int     @default(0) @db.UnsignedInt
  gamesPlayed   Decimal @default(0) @db.Decimal(10, 0)
  gamesWon      Int     @default(0) @db.UnsignedInt
  level         Int     @default(1) @db.UnsignedInt
  loseRatio     Decimal @default(0) @db.Decimal(10, 0)
  nickname      String  @db.VarChar(100)
  imgURL        String? @db.VarChar(1000)
  playtimeTotal Decimal @default(0) @db.Decimal(10, 0)
  rank          String  @default("Seaman") @db.VarChar(100)
  totalPoints   Int     @default(0) @db.UnsignedInt
  winRatio      Decimal @default(0) @db.Decimal(10, 0)
  xp            Int     @default(0) @db.UnsignedInt
  user          user    @relation(fields: [userID], references: [id], onDelete: Cascade, map: "player_user_FK")

  @@index([userID], map: "player_user_FK")
}

model codes {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  userID    Int       @db.UnsignedInt
  codeType  String    @db.VarChar(100)
  code      String    @db.VarChar(1000)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  used      Boolean   @default(false)
  usedAt    DateTime? @db.Timestamp(0)
  expired   Boolean   @default(false)
  user      user      @relation(fields: [userID], references: [id], onDelete: Cascade, map: "codes_user_FK")

  @@index([userID], map: "codes_user_FK")
}

model notify {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  location  String   @db.VarChar(200)
  message   String   @db.LongText
  createdAt DateTime @default(now()) @db.Timestamp(0)
}

model lobby {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  userID    Int      @db.UnsignedInt
  username  String   @db.VarChar(100)
  message   String   @db.LongText
  createdAt DateTime @default(now()) @db.Timestamp(0)
  user      user     @relation(fields: [userID], references: [id], onDelete: Cascade, map: "lobby_user_FK")

  @@index([userID], map: "lobby_user_FK")
}
